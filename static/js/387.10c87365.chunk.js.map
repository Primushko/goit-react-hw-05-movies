{"version":3,"file":"static/js/387.10c87365.chunk.js","mappings":"qPAEaA,E,QAAOC,EAAAA,GAAH,kD,SCkDjB,EA9CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IAEXE,EAAAA,EAAAA,IAAaR,GACVS,MAAK,SAAAN,GACJC,EAAWD,EACZ,IACAO,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPR,GAAW,EACZ,GAIN,GAAE,CAACN,KAGF,gCACGK,IAAW,SAACU,EAAA,EAAD,IACQ,IAAnBZ,EAAQa,SACP,0BACE,SAAClB,EAAD,UACGK,EAAQc,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QASL,IAAnBlB,EAAQa,SACP,yBAAK,gDAIZ,C,mMChDDM,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAGHC,EAAa,mCAAG,oGACJF,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,cACrBE,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAMbC,EAAoB,mCAAG,WAAMC,GAAN,uFACXP,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCM,EADnC,gCADW,cAC5BJ,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAQpBG,EAAiB,mCAAG,WAAM9B,GAAN,uFACRsB,EAAAA,EAAAA,IAAA,gBACZtB,EADY,oBACOuB,EADP,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAQjBK,EAAW,mCAAG,WAAM/B,GAAN,uFACFsB,EAAAA,EAAAA,IAAA,gBACZtB,EADY,4BACeuB,EADf,oBADE,cACnBE,EADmB,yBAIlBA,EAASC,KAAKM,MAJI,2CAAH,sDAQXxB,EAAY,mCAAG,WAAMR,GAAN,uFACHsB,EAAAA,EAAAA,IAAA,gBACZtB,EADY,4BACeuB,EADf,2BADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchReviews } from 'services/Api';\nimport Loader from 'components/Loader/Loader';\nimport { List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviewsFilms = () => {\n      setLoading(true);\n\n      fetchReviews(movieId)\n        .then(reviews => {\n          setReviews(reviews);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchReviewsFilms();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews.length !== 0 && (\n        <div>\n          <List>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </List>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>WE DON`T HAVE ANY REVIEWS FOR THIS MOVIE!</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n// базова URL-адреса для викликів AP\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// ключ\nconst API_KEY = 'd6edcad997ee9c808a30a1ff00b87277';\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n// пошук фільму за ключовим словом на сторінці фільмів.(keyword)\nexport const fetchSearchByKeyword = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n// запит інформації про акторський склад для сторінки кінофільму.\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\n// запит оглядів для сторінки кінофільму.\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["List","styled","movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","fetchReviews","then","catch","error","console","log","finally","Loader","length","map","review","author","content","id","axios","API_KEY","fetchTrending","response","data","results","fetchSearchByKeyword","query","fetchMovieDetails","fetchActors","cast"],"sourceRoot":""}