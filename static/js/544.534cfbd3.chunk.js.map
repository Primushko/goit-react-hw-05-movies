{"version":3,"file":"static/js/544.534cfbd3.chunk.js","mappings":"wNAGaA,EAAOC,EAAAA,EAAAA,GAAH,kDAIJC,EAAOD,EAAAA,EAAAA,GAAH,yFAMJE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,6G,SCgBtB,EAzBmB,SAAC,GAAe,IAAbI,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EAAMG,KAAI,SAAAC,GAAI,OACb,SAACP,EAAD,WACE,SAACC,EAAD,CAAWO,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAApD,SACGG,EAAKK,SAFCL,EAAKE,GADH,KASpB,C,4FCoBD,UAjCa,WACX,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOV,EAAP,KAAcW,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IAEXE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJN,EAASM,EACV,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPT,GAAW,EACZ,GAIN,GAAE,KAGD,6BACE,wBAAI,oBACJ,SAAC,IAAD,CAAYb,MAAOA,IAElBY,IAAW,SAAC,IAAD,MAGjB,C,mMClCDW,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHT,EAAa,mCAAG,oGACJQ,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,cACrBC,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACXN,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DK,IAFnD,cAC5BJ,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAOpBG,EAAiB,mCAAG,WAAMC,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,oBADQ,cACzBC,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBM,EAAW,mCAAG,WAAMD,GAAN,uFACFR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADE,cACnBC,EADmB,yBAIlBA,EAASC,KAAKO,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAMH,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,2BADG,cACpBC,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["pages/EditorList/EditorList.styled.jsx","pages/EditorList/EditorList.jsx","pages/Home/Home.jsx","services/TmbdApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: tomato;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, MovieLink } from './EditorList.styled';\n\nconst EditorList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(film => (\n        <Item key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nEditorList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default EditorList;\n","import React, { useEffect, useState } from 'react';\nimport EditorList from 'pages/EditorList/EditorList';\nimport { fetchTrending } from 'services/TmbdApi';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingFilms = () => {\n      setLoading(true);\n\n      fetchTrending()\n        .then(trendingFilms => {\n          setFilms(trendingFilms);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchTrendingFilms();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <EditorList films={films} />\n\n      {loading && <Loader />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n// базова URL-адреса для викликів AP\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// ключ\nconst API_KEY = 'd6edcad997ee9c808a30a1ff00b87277';\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n// пошук фільму за ключовим словом на сторінці фільмів.(keyword)\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n// запит повної інформації про фільм для сторінки кінофільму.\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n// запит інформації про акторський склад для сторінки кінофільму.\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n// запит оглядів для сторінки кінофільму.\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["List","styled","Item","MovieLink","Link","films","location","useLocation","map","film","to","id","state","from","title","useState","setFilms","loading","setLoading","useEffect","fetchTrending","then","trendingFilms","catch","error","console","log","finally","axios","API_KEY","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","movieId","fetchActors","cast","fetchReviews"],"sourceRoot":""}